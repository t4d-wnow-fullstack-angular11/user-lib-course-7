!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/common"),require("@angular/core"),require("@angular/forms"),require("@angular/common/http"),require("@angular/material/list"),require("@angular/material/toolbar"),require("@angular/material/sidenav"),require("@angular/material/icon"),require("@angular/material/card"),require("@angular/material/button"),require("@angular/material/form-field"),require("@angular/material/input"),require("@angular/material/menu"),require("@angular/material/table"),require("@angular/material/snack-bar"),require("@t4d-wnow/shared-lib"),require("@angular/router"),require("rxjs"),require("rxjs/operators"),require("lodash-es")):"function"==typeof define&&define.amd?define("@t4d-wnow/user-lib",["exports","@angular/common","@angular/core","@angular/forms","@angular/common/http","@angular/material/list","@angular/material/toolbar","@angular/material/sidenav","@angular/material/icon","@angular/material/card","@angular/material/button","@angular/material/form-field","@angular/material/input","@angular/material/menu","@angular/material/table","@angular/material/snack-bar","@t4d-wnow/shared-lib","@angular/router","rxjs","rxjs/operators","lodash-es"],r):r(((e="undefined"!=typeof globalThis?globalThis:e||self)["t4d-wnow"]=e["t4d-wnow"]||{},e["t4d-wnow"]["user-lib"]={}),e.ng.common,e.ng.core,e.ng.forms,e.ng.common.http,e.ng.material.list,e.ng.material.toolbar,e.ng.material.sidenav,e.ng.material.icon,e.ng.material.card,e.ng.material.button,e.ng.material.formField,e.ng.material.input,e.ng.material.menu,e.ng.material.table,e.ng.material.snackBar,e["t4d-wnow-shared-lib"],e.ng.router,e.rxjs,e.rxjs.operators,e["lodash-es"])}(this,(function(e,r,t,n,o,a,i,s,u,l,c,m,d,p,f,g,h,v,b,y,w){"use strict";var P=function(){function e(e){this.fb=e,this.changePassword=new t.EventEmitter}return e.prototype.ngOnInit=function(){this.changePasswordForm=this.fb.group({currentPassword:"",newPassword:"",confirmPassword:""},{validators:[h.confirmValue("newPassword","confirmPassword")]})},e.prototype.doChangePassword=function(){this.changePasswordForm.valid&&this.changePassword.emit(this.changePasswordForm.value)},e}();P.decorators=[{type:t.Component,args:[{selector:"app-change-password-form",template:'<form class="change-password-form" [formGroup]="changePasswordForm">\n\n  <div class="mat-error error" *ngIf="changePasswordForm?.errors?.confirmValue">\n    <mat-icon aria-hidden="false" aria-label="Error">error</mat-icon>\n    The new password and the confirm password do not match.\n  </div>\n\n  <div class="form-field">\n    <mat-form-field appearance="outline">\n      <mat-label>Current Password</mat-label>\n      <input matInput type="password" formControlName="currentPassword">\n    </mat-form-field>\n  </div>\n\n  <div class="form-field">\n    <mat-form-field appearance="outline">\n      <mat-label>New Password</mat-label>\n      <input matInput type="password" formControlName="newPassword">\n    </mat-form-field>\n  </div>\n\n  <div class="form-field">\n    <mat-form-field appearance="outline">\n      <mat-label>Confirm Password</mat-label>\n      <input matInput type="password" formControlName="confirmPassword">\n    </mat-form-field>\n  </div>\n\n  <div class="buttons">\n    <button type="button" (click)="doChangePassword()" mat-raised-button color="primary">\n      Change Password\n    </button>\n  </div>\n\n\n</form>',styles:[".error{padding:10px;text-align:center}.error mat-icon{vertical-align:middle}.buttons,.form-field{text-align:center}.buttons>button{margin:4px}"]}]}],P.ctorParameters=function(){return[{type:n.FormBuilder}]},P.propDecorators={changePassword:[{type:t.Output}]};var k=function(){function e(e,r,t){this.username=e,this.userKind=r,this.displayName=t,this.roles=[]}return e.prototype.addRole=function(e){if(!e)throw new Error("role name cannot be empty");return this.roles.push(e),this},e.prototype.hasRole=function(e){return w.intersection(this.roles,e).length>0},e}(),I=function(){function e(e){this.httpClient=e,this.accessToken=null,this.currentUser=null}return e.prototype.loginEmployee=function(e,r){var t=this;return this.httpClient.post("/api/users/login",{username:e,password:r,kind:"employee"}).pipe(y.tap((function(e){t.accessToken=e.accessToken,localStorage.refreshToken=e.refreshToken})),y.map((function(e){var r=new k(e.username,e.userKind,e.displayName);return e.roles.forEach((function(e){return r.addRole(e)})),r})),y.tap((function(e){t.currentUser=e})))},e.prototype.refreshUser=function(){var e=this;return this.httpClient.get("/api/users/refresh").pipe(y.tap((function(r){e.accessToken=r.accessToken,localStorage.refreshToken=r.refreshToken})),y.map((function(){return b.of(!0)})))},e.prototype.changePassword=function(e,r,t,n){return this.httpClient.post("/api/users/change-password",{username:e,userKind:r,oldPassword:t,newPassword:n})},e.prototype.getCurrentUser=function(){return this.currentUser},e.prototype.getAccessToken=function(){return this.accessToken},e.prototype.getRefreshToken=function(){return localStorage.refreshToken},e.prototype.logoutUser=function(){this.accessToken=null,this.currentUser=null,localStorage.refreshToken=null},e}();I.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new I(t.ɵɵinject(o.HttpClient))},token:I,providedIn:"root"}),I.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],I.ctorParameters=function(){return[{type:o.HttpClient}]};var C=function(){function e(e,r){this.router=e,this.usersSvc=r}return Object.defineProperty(e.prototype,"loggedIn",{get:function(){return!!this.usersSvc.getCurrentUser()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"displayName",{get:function(){var e,r;return null!==(r=null===(e=this.usersSvc.getCurrentUser())||void 0===e?void 0:e.displayName)&&void 0!==r?r:""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"username",{get:function(){var e,r;return null!==(r=null===(e=this.usersSvc.getCurrentUser())||void 0===e?void 0:e.username)&&void 0!==r?r:""},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.navigateToProfile=function(){return this.router.navigateByUrl("/profile")},e.prototype.navigateToLogout=function(){return this.router.navigateByUrl("/logout")},e.prototype.navigateToLogin=function(){return this.router.navigateByUrl("/login")},e}();C.decorators=[{type:t.Component,args:[{selector:"app-current-user",template:'<div *ngIf="loggedIn">\n  <button mat-button [matMenuTriggerFor]="menu">\n    <mat-icon aria-hidden="false" aria-label="User Account">account_circle</mat-icon>\n    <span>{{displayName}} ({{username}})</span>\n  </button>\n  <mat-menu #menu="matMenu">\n    <button mat-menu-item (click)="navigateToProfile()">Profile</button>\n    <button mat-menu-item (click)="navigateToLogout()">Logout</button>\n  </mat-menu>\n</div>\n<div *ngIf="!loggedIn">\n  <button mat-button (click)="navigateToLogin()">\n    <mat-icon aria-hidden="false" aria-label="User Account">account_circle</mat-icon>\n    <span>Login</span>\n  </button>\n</div>',styles:["mat-icon{margin-right:4px}"]}]}],C.ctorParameters=function(){return[{type:v.Router},{type:I}]};var T=function(){function e(e){this.fb=e,this.loginFormSubmitted=!1,this.login=new t.EventEmitter,this.clear=new t.EventEmitter}return Object.defineProperty(e.prototype,"showLoginFormValidationSummary",{get:function(){return this.loginForm.invalid&&this.loginFormSubmitted},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"showUsernameError",{get:function(){return this.loginForm.get("username").invalid},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"showPasswordError",{get:function(){return this.loginForm.get("password").invalid},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.loginForm=this.fb.group({username:["adodsworth",{validators:[n.Validators.required]}],password:["testpass",{validators:[n.Validators.required]}]})},e.prototype.doLogin=function(){this.loginFormSubmitted=!0,this.loginForm.invalid||this.login.emit(this.loginForm.value)},e.prototype.doClear=function(){this.loginForm.reset(),this.clear.emit()},e}();T.decorators=[{type:t.Component,args:[{selector:"app-login-form",template:'<mat-card class="validation-summary-card" *ngIf="showLoginFormValidationSummary">\n  <mat-card-header class="validation-summary-header">\n    <mat-card-title class="validation-summary-title">\n      Errors\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-list role="list" dense>\n      <mat-list-item role="listitem" *ngIf="showUsernameError">\n        <mat-icon mat-list-icon>arrow_right</mat-icon>\n        Username is required.\n      </mat-list-item>\n      <mat-list-item role="listitem" *ngIf="showPasswordError">\n        <mat-icon mat-list-icon>arrow_right</mat-icon>\n        Password is required.\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n</mat-card>\n\n\n<form class="login-form" [formGroup]="loginForm" (submit)="doLogin()">\n\n  <div class="form-field">\n    <mat-form-field appearance="outline">\n      <mat-label>Username</mat-label>\n      <input matInput formControlName="username" />\n      <mat-error *ngIf="showUsernameError">Username is required</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class="form-field">\n    <mat-form-field appearance="outline">\n      <mat-label>Password</mat-label>\n      <input matInput formControlName="password" />\n      <mat-error *ngIf="showPasswordError">Password is required</mat-error>\n    </mat-form-field>\n  </div>\n\n  <div class="buttons">\n    <button type="submit" mat-raised-button color="primary">Login</button>\n    <button type="reset" mat-raised-button (click)="doClear()">Clear</button>\n  </div>\n\n</form>',styles:[".buttons,.form-field{padding:6px 0;text-align:center}.buttons>button{margin:4px}.validation-summary-card{margin:0 auto 20px;max-width:400px;padding:0}.validation-summary-header{background-color:#3f51b5;color:#fff}.validation-summary-title{font-size:1.1rem;margin:0;padding:12px}.mat-card-content{padding:8px 0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:32px}.mat-list-base[dense] .mat-list-item{font-size:.9rem}"]}]}],T.ctorParameters=function(){return[{type:n.FormBuilder}]},T.propDecorators={login:[{type:t.Output}],clear:[{type:t.Output}]};var M=function(){function e(){this.userProfile=null}return e.prototype.ngOnInit=function(){},e}();M.decorators=[{type:t.Component,args:[{selector:"app-user-profile",template:"<div>\n  <div>Username: {{userProfile?.username}}</div>\n  <div>Display Name: {{userProfile?.displayName}}</div>\n  <div>Roles: {{userProfile?.roles?.join(', ')}}</div>\n</div>",styles:[""]}]}],M.ctorParameters=function(){return[]},M.propDecorators={userProfile:[{type:t.Input}]};var U=function(){};U.decorators=[{type:t.NgModule,args:[{declarations:[P,C,T,M],imports:[r.CommonModule,n.ReactiveFormsModule,o.HttpClientModule,a.MatListModule,i.MatToolbarModule,s.MatSidenavModule,c.MatButtonModule,u.MatIconModule,l.MatCardModule,m.MatFormFieldModule,d.MatInputModule,p.MatMenuModule,f.MatTableModule,g.MatSnackBarModule],exports:[P,C,T,M]}]}];var j=function(){function e(e,r){this.usersSvc=e,this.snackBar=r}return e.prototype.canActivate=function(e,r){var t;if(null===(t=this.usersSvc.getCurrentUser())||void 0===t?void 0:t.hasRole(e.data.roles))return!0;var n=this.snackBar.open("You are not allowed to navigate to the "+e.data.title+".","Dismiss");return n.onAction().subscribe((function(){n.dismiss()})),!1},e}();j.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new j(t.ɵɵinject(I),t.ɵɵinject(g.MatSnackBar))},token:j,providedIn:"root"}),j.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],j.ctorParameters=function(){return[{type:I},{type:g.MatSnackBar}]};var S=function(){function e(e){this.usersSvc=e}return e.prototype.withAccessToken=function(e){return e.clone({headers:e.headers.set("Authorization","Bearer "+this.usersSvc.getAccessToken())})},e.prototype.withRefreshToken=function(e){return e.clone({method:"GET",headers:e.headers.set("Authorization","Bearer "+this.usersSvc.getRefreshToken())})},e.prototype.intercept=function(e,r){var t=this;return e.url.endsWith("/api/users/login")?r.handle(e):e.url.endsWith("/api/users/refresh")?r.handle(this.withRefreshToken(e)):r.handle(this.withAccessToken(e)).pipe(y.catchError((function(n,a){return n instanceof o.HttpErrorResponse?401===n.status?t.usersSvc.refreshUser().pipe(y.switchMap((function(){return r.handle(t.withAccessToken(e))}))):b.throwError(n):a})))},e}();S.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new S(t.ɵɵinject(I))},token:S,providedIn:"root"}),S.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],S.ctorParameters=function(){return[{type:I}]};var F=function(){function e(e,r){this.usersSvc=e,this.router=r}return e.prototype.canActivate=function(e,r){return!!this.usersSvc.getCurrentUser()||this.router.parseUrl("/login")},e}();F.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new F(t.ɵɵinject(I),t.ɵɵinject(v.Router))},token:F,providedIn:"root"}),F.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],F.ctorParameters=function(){return[{type:I},{type:v.Router}]},e.AllowedRolesGuardService=j,e.AuthorizationInterceptorService=S,e.ChangePasswordFormComponent=P,e.CurrentUser=k,e.CurrentUserComponent=C,e.LoggedInGuardService=F,e.LoginFormComponent=T,e.UserLibModule=U,e.UserProfileComponent=M,e.UsersService=I,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=t4d-wnow-user-lib.umd.min.js.map